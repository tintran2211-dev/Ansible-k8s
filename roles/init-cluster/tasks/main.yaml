- name: Initialize Kubernetes
  become: yes
  ansible.builtin.command: sudo kubeadm init
  register: kubeadm_init_result

- name: Create .kube directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Read admin.conf
  become: yes
  ansible.builtin.slurp:
    path: /etc/kubernetes/admin.conf
  register: admin_conf_content

- name: Parse admin.conf content
  ansible.builtin.set_fact:
    config_data: "{{ admin_conf_content.content | b64decode | from_yaml }}"

- name: Extract certificate data
  ansible.builtin.set_fact:
    ca_certificate_data: "{{ config_data.clusters[0].cluster['certificate-authority-data'] }}"
    client_certificate_data: "{{ config_data.users[0].user['client-certificate-data'] }}"
    client_key_data: "{{ config_data.users[0].user['client-key-data'] }}"
    kube_server_url: "{{ config_data.clusters[0].cluster.server }}"

- name: Debug extracted certificate data
  ansible.builtin.debug:
    msg: "CA certificate data: {{ ca_certificate_data }} | Client certificate data: {{ client_certificate_data }} | Client key data: {{ client_key_data }}"


- name: Generate admin.conf from template
  ansible.builtin.template:
    src: templates/kube-config.j2
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
  vars:
    kube_server_url: "{{ kube_server_url }}"
    ca_certificate_data: "{{ ca_certificate_data }}"
    client_certificate_data: "{{ client_certificate_data }}"
    client_key_data: "{{ client_key_data }}"

- name: Store join command in a fact
  ansible.builtin.set_fact:
    join_command: "{{ kubeadm_init_result.stdout | regex_search('kubeadm join\\s.*\\n\\s*--discovery-token-ca-cert-hash\\s.*') }}"

- name: Save join command to a file
  ansible.builtin.copy:
    content: "{{ join_command }}"
    dest: "/home/{{ ansible_user }}/join_command.txt"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Install Calico CNI plugin
  ansible.builtin.command:
    cmd: kubectl apply -f https://docs.projectcalico.org/v3.16/manifests/calico.yaml --kubeconfig=/home/{{ ansible_user }}/.kube/config


# - name: Install Calico CNI plugin
#   ansible.builtin.shell:
#     cmd: kubectl apply -f https://docs.projectcalico.org/v3.16/manifests/calico.yaml
#     environment:
#       KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"
